#if(packageName)
package #(packageName)
#end

import static com.querydsl.core.types.PathMetadataFactory.*
import com.querydsl.core.types.dsl.*
import com.querydsl.core.types.*
import com.querydsl.sql.*
import java.sql.Types
#for(pkg : importPackages)
#if(!pkg.startsWith('java.lang.') && !pkg.startsWith('java.util.') && !pkg.startsWith('java.net.') && pkg!='java.math.BigDecimal' && pkg!='java.math.BigInteger')
import #(pkg)
#end
#end

/**
 * #(table.comment)(#(table.name))
 */
@SuppressWarnings("ALL")
class Q#(className) extends RelationalPathBase<#(className)> {
    /** #(table.name)è¡¨ */
    public static final Q#(className) #(underlineToCamel(table.name)) = new Q#(className)("#(table.name)")

#for(property : properties)
    /** #(property.comment) */
    public final #(getQueryDslFieldDefine(property));
#end

    Q#(className)(String variable) {
        super(#(className).class, forVariable(variable), "#(table.schemaName)", "#(table.name)")
        addMetadata()
    }

    Q#(className)(String variable, String schema, String table) {
        super(#(className).class, forVariable(variable), schema, table)
        addMetadata()
    }

    Q#(className)(String variable, String schema) {
        super(#(className).class, forVariable(variable), schema, "#(table.name)")
        addMetadata()
    }

    Q#(className)(Path<? extends #(className)> path) {
        super(path.getType(), path.getMetadata(), "#(table.schemaName)", "#(table.name)")
        addMetadata()
    }

    Q#(className)(PathMetadata metadata) {
        super(#(className).class, metadata, "#(table.schemaName)", "#(table.name)")
        addMetadata()
    }

    private void addMetadata() {
#for(property : properties)
#set(column = property.column)
#set(size = max(column.size, column.width))
        addMetadata(#(property.name), ColumnMetadata.named("#(column.name)").withIndex(#(column.ordinalPosition)).ofType(#(property.jdbcTypeName))#if(size>0).withSize(#(size))#end#if(column.decimalDigits>0).withDigits(#(column.decimalDigits))#end)
#end
    }
}
