[OK] 全局异常处理
[OK] 跨域问题
[OK] 静态资源问题
[80] MVC参数绑定
[  ] MVC数据验证@Validated
[  ] MVC拦截问题
[  ] 精简代码 & 简化逻辑 & 整合相同功能代码 & 重构代码 -> 删除 ReadOnlyHttpHeaders HttpHeaders
[  ] [配置化]MVC处理时默认开启(多个)数据源事务
[  ]
[  ]
[  ]

--------------------------
请求
🡓
CustomFilter
    🡓
    [0] DefSettingFilter
    🡓
    [100] ExceptionHandlerFilter
    🡓
    [200] EchoFilter (JavalinConfig#requestLogger)
    🡓
    [300] CorsFilter (可参考: https://javalin.io/plugins/cors)
    🡓
    [400] CaptureHandlerFilter
    🡓
    [500] SecurityFilter (一系列Filter)
        🡓
        AuthenticationFilter - 身份认证拦截 (读取请求token -> 使用刷新token -> 验证token(自定义) -> 加载SecurityContext并绑定到当前线程)
        🡓
        LoginFilter          - 登录拦截 (收集登录数据(自定义) -> 校验登录数据(自定义) -> 加载用户信息(自定义) -> 校验用户信息(自定义) -> 创建token(自定义) -> 缓存SecurityContext(自定义))
        🡓
        LogoutFilter         - 登出拦截 (删除Token)
        🡓
        AuthorizationFilter  - 权限授权拦截 (获取SecurityContext -> 授权投票器开始投票(自定义) -> 根据投票结果判断是否授权通过)
            AuthorizationVoter(授权投票器)
        🡓
    🡓
    [600] StaticResourceFilter
    🡓
    [700] MvcFilter(before | after | exception)
        🡓
        HandlerInterceptor
        🡓
        before (可提前响应请求)
        🡓
        invokeMethod (自定义MVC: 响应请求)
        🡓
        after
        🡓
        finally (执行before后一定会执行, 可以处理异常)
        🡓
    🡓
🡓
CustomServlet
🡓
JavalinJettyServlet
    🡓
    Javalin#before (不能提前响应请求)
    🡓
    Javalin#endpoint-handler (响应请求)
    🡓
    Javalin#error
    🡓
    Javalin#after (不能响应请求)
    🡓
    Javalin#exception (仅异常时执行)
    🡓
    Javalin#requestLogger
    🡓
🡓
