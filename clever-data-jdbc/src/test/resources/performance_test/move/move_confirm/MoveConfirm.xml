<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MoveConfirm">
    <select id="move_confirm" resultType="map">
        SELECT DISTINCT TH.move_no,
                        TB.order_id,
                        TB.cmd_id,
                        TC.item_id,
                        TC.item_code,
                        TC.item_name,
                        TC.manufacturer,
                        TZ.package_meas,
                        TZ.package_unit,
                        TD.loc_classify,
                        TD.area_id,
                        TX.area_code,
                        TX.area_name,
                        TD.loc_code,
                        TRUNC(TB.qty_plan / TZ.package_meas) js_plan,
                        MOD(TB.qty_plan, TZ.package_meas)    lss_plan,
                        TB.qty_plan,
                        TB.lot_id,
                        TE.lot01,
                        substr(TE.lot02, 0, 10)              shengchan_date,
                        substr(TE.lot03, 0, 10)              youx_date,
                        TB.loc_id,
                        TB.loc_id_real,
                        TF.loc_code                          loc_code_real,
                        TRUNC(TB.qty / TZ.package_meas)      js,
                        MOD(TB.qty, TZ.package_meas)         lss,
                        TB.qty,
                        TB.quality_flg,
                        TC.logogram                          logogram_item,
                        TC.owner_id,
                        TB.order_line_no,
                        TG.logogram                          logogram_owner,
                        TB.lpn,
                        TH.move_staff_name                   kaip_staff,
                        TB.cmd_create_time                   kaip_time_yk,
                        (SELECT loc_code
                         FROM bas_location A, order_move_details B
                         WHERE B.loc_id_from = A.loc_id
                           AND B.move_id = TH.move_id
                           AND B.line_no = TB.order_line_no) loc_code_from
        FROM cmd_in TB,
             bas_item TC,
             bas_location TD,
             bas_lot_att TE,
             bas_location TF,
             bas_owner TG,
             order_move TH,
             bas_area TX,
             bas_package_items TZ
        WHERE TC.owner_id = TG.owner_id
          AND TB.item_id = TC.item_id
          AND TB.owner_id = TC.owner_id
          AND TB.item_id = TE.item_id
          AND TB.lot_id = TE.lot_id
          AND TB.loc_id = TD.loc_id
          AND TB.loc_id_real = TF.loc_id
          AND TD.loc_type <![CDATA[ <> ]]> '4'
          AND TF.loc_type <![CDATA[ <> ]]> '4'
          AND TB.order_biz_type = '41'
          AND TB.cmd_state = '10'
          AND TH.move_id = TB.order_id
          AND TB.item_id = TZ.item_id
          AND TB.package_id = TZ.package_id
          AND TZ.package_level = 3
          AND TZ.package_item_id = TB.package_item_id
          AND TX.area_id = TD.area_id
          --AND TH.move_no LIKE 'YKD%'
          AND TH.move_type in (1, 3)
          AND TB.wh_id LIKE '%' || #{wh_id} || '%'
          --% and TH.move_no LIKE #{order_no}
          --% and TX.area_code LIKE #{area_code}
          --% and TG.logogram LIKE #{logogram_owner}
          --% and (TC.logogram LIKE #{logogram_item} or TC.item_code LIKE #{logogram_item})
          --% and TH.move_staff_name LIKE #{move_staff_name}
        ORDER BY TH.move_no, TB.order_line_no

    </select>

    <select id="queryInvLoc" resultType="map">
        select
            TB.loc_id,
            TB.item_id,
            TB.lot_id,
            TB.qty,
            TA.loc_code,
            TC.item_code,
            TC.item_name,
            TE.lot01
        from
            bas_location TA,
            inv_loc TB,
            bas_item TC,
            bas_lot_att TE,
            bas_package_items TF
        where
            TA.loc_id = TB.loc_id
            and TB.qty - TB.qty_out - TB.qty_rep_out > 0
            and TB.is_lock = 0
            and TA.loc_type <![CDATA[ <> ]]> '4'
            and TA.loc_classify NOT IN ('7', '4')
            and TB.item_id = TC.item_id
            and TB.lot_id = TE.lot_id
            and TF.item_id = TB.item_id
            and TF.package_id = TB.package_id
            and TF.package_level = 1
            and TA.wh_id = #{wh_id}
            and TB.wh_id = #{wh_id}
            and TA.owner_id in (#{owner_id_list})
            and TB.owner_id in (#{owner_id_list})
            and TC.owner_id in (#{owner_id_list})
        <if test="loc_code != null and loc_code != ''">
            and (
                TA.loc_code like '%' || #{loc_code} || '%'
                or UPPER(TC.logogram) like '%' || UPPER(#{loc_code}) || '%'
                )
        </if>
        <if test="item_code != null and item_code != ''">
            and(
                TF.barcode = #{item_code}
                or TC.item_code = #{item_code}
            )
        </if>
        <if test="loc_classify != null and loc_classify == true">
            and TA.loc_classify IN (2,3)
        </if>
        ORDER BY LOC_CODE
    </select>

    <select id="queryInvDetails" resultType="map">
        select
            TA.loc_code,
            TA.loc_classify,
            TB.*,
            TC.item_name,
            TC.item_code,
            TC.manufacturer,
            TD.package_item_id,
            TD.package_unit,
            TD.package_meas,
            TE.lot01,
            TE.lot02,
            TE.lot03,
            TRUNC(TB.qty / TD.package_meas) js,
            MOD(TB.qty, TD.package_meas)    lss,
            (TB.qty - TB.qty_out - TB.qty_rep_out - qty_lock) loc_ok_qty
        from
            bas_location TA,
            inv_loc TB,
            bas_item TC,
            bas_package_items TD,
            bas_lot_att TE
        where
            TA.loc_id = TB.loc_id
            and TB.qty - TB.qty_out - TB.qty_rep_out > 0
            and TB.is_lock = 0
            and TA.loc_type <![CDATA[ <> ]]> '4'
            and TA.loc_classify NOT IN ('7', '4')
            and TB.item_id = TC.item_id
            and TB.item_id = TD.item_id
            and TB.package_id = TD.package_id
            and TD.package_level = 3
            and TB.lot_id = TE.lot_id
            and TA.wh_id = #{wh_id}
            and TB.wh_id = #{wh_id}
            and TA.owner_id in (#{owner_id_list})
            and TB.owner_id in (#{owner_id_list})
            and TC.owner_id in (#{owner_id_list})
            and TB.loc_id = #{loc_id}
            and TB.lot_id = #{lot_id}
            and TB.item_id = #{item_id}
    </select>

    <select id="queryMoveOrder" resultType="map">
        select
            TA.move_id,
            TA.move_no,
            TA.barcode,
            TA.dates,
            TA.move_staff_name,
            TC.line_no,
            TC.qty,
            TD.loc_code,
            TE.area_code,
            TF.item_name,
            TH.lot01
        from
            order_move TA,
            cmd_in TB,
            order_move_details TC,
            bas_location TD,
            bas_area TE,
            bas_item TF,
            bas_package_items TG,
            bas_lot_att TH
        where
            TA.move_id = TB.order_id
            and TB.order_biz_type = '41'
            and TB.cmd_state = '10'
            and TA.wh_id = TB.wh_id
            --@ and TA.wh_id = #{wh_id}
            and TC.move_id = TA.move_id
            and TC.is_executed = 0
            --@ and TA.move_type = #{move_type}
            and TD.loc_id = TC.loc_id_to
            and TD.area_id = TE.area_id
            and TF.item_id = TC.item_id
            and TF.owner_id = TC.owner_id
            and TG.item_id = TC.item_id
            and TG.package_id = TC.package_id
            and TB.order_line_no = TC.line_no
            and TG.package_level = 1
            and TH.item_id = TF.item_id
            and TH.lot_id = TC.lot_id
            <if test="loc_code!= null and loc_code != ''">
                and (
                TD.loc_code like '%' || #{loc_code} || '%'
                or TG.barcode like '%' || #{loc_code} || '%'
                or TF.item_code like '%' || #{loc_code} || '%'
                or UPPER(TF.logogram) like '%' || UPPER(#{loc_code}) || '%'
                )
            </if>
            <if test="barcode != null and barcode != ''">
                AND UPPER(TA.barcode) = UPPER(#{barcode})
            </if>
        order by
            TA.move_no
    </select>

    <select id="queryMoveArea" resultType="map">
        select
            T1.move_id,
            T3.area_code,
            T3.area_id,
            T2.road_no,
            count(T1.loc_id_from) Z_TS
        from
            order_move_details T1,
            bas_location T2,
            bas_area T3,
            cmd_in T4
        where
            T1.move_id = #{move_id}
            and T1.loc_id_from = T2.loc_id
            and T1.line_no = T4.order_line_no
            and T2.area_id = T3.area_id
            and T4.order_id = T1.move_id
            and T4.order_biz_type = '41'
            and T4.cmd_state = '10'
        group by
            T1.move_id,
            T3.area_code,
            T3.area_id,
            T2.road_no
        order by
            T3.area_code, T2.road_no
    </select>

    <select id="getMoveDetails" resultType="map">
        select
            T1.*,
            T1.loc_id_to loc_id_real,
            T2.package_meas,
            T2.package_unit,
            T4.loc_code loc_code_from,
            T5.loc_code loc_code_to,
            T6.lot01,
            T6.lot02,
            T6.lot03,
            T7.item_code,
            T7.item_name,
            T7.manufacturer,
            T8.dates,
            T8.move_staff_name,
            T8.move_no
        from
            order_move_details T1,
            bas_package_items T2,
            cmd_in T3,
            bas_location T4,
            bas_location T5,
            bas_lot_att T6,
            bas_item T7,
            order_move T8
        where
            T1.move_id = #{move_id}
            and T1.line_no = #{line_no}
            and T2.item_id = T1.item_id
            and T2.package_id = T1.package_id
            and T2.package_level = 3
            and T3.order_line_no = T1.line_no
            and T3.order_id = T1.move_id
            and T3.order_biz_type = '41'
            and T3.cmd_state = '10'
            and T1.loc_id_from = T4.loc_id
            and T1.loc_id_to = T5.loc_id
            and T6.lot_id = T1.lot_id
            and T7.item_id = T1.item_id
            and T7.owner_id = T1.owner_id
            and T8.move_id = T1.move_id
            and T1.is_executed = 0
    </select>

    <select id="query_move_data" resultType="map">
        select
            t2.move_no danj_no,
            t.line_no hanghao,
            t.owner_id huoz_id,
            'MV' danj_type,
            to_char(sysdate, 'yyyy-mm-dd') riqi_date,
            t3.item_code shangp_id,
            t.qty num,
            t1.lot01 lot,
            t1.lot02 shengchan_char,
            t1.lot03 youx_char,
            'N' zt,
            t.quality_to kuc_state,
            t4.wh_code wlzx_code,
            t2.move_staff_name caoz_staff,
            t3.sap_meins kaip_dw
        from
            order_move_details t,
            bas_lot_att t1,
            order_move t2,
            bas_item t3,
            bas_wh t4
        where
            t.item_id = t3.item_id
            and t.lot_id = t1.lot_id
            and t.move_id = t2.move_id
            and t2.wh_id = t4.wh_id
            and t.move_id = #{move_id}
            and t.line_no = #{line_no}
    </select>

</mapper>