<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="LoadIssue">
    <!--按装车状态查询装车单-->
    <select id="getLoadingBillByDistributionState" resultType="map">
        SELECT T.print_flag,
        T.distribution_state,
        T.order_load_id,
        T.order_load_code,
        T.create_at,
        T.start_time,
        T.back_time,
        T.dock_no,
        T.delivery_staff,
        S.user_name delivery_staff_name,
        T.load_reviewer,
        T.transport_type,
        T.car_code,
        T.driver,
        T.out_mileage,
        T.back_mileage,
        B.car_id,
        B.model,
        B.load_weight,
        B.load_qty,
        B.state,
        T.shipping_company_id,
        -- C.company_id,
        -- C.company_code,
        -- C.company_name,
        -- C.liaison,
        -- C.liaison_phone,
        -- C.address,
        T.is_pack_review,
        F.customer_count,
        F.bill_count,
        F.fcl_qty,
        F.lcl_qty,
        (F.fcl_qty + F.lcl_qty) all_qty,
        F.gift_qty,
        F.sum_weight,
        F.sum_amount,
        F.sku_type,
        F.pickup_mode
        FROM order_load T
        LEFT JOIN bas_car B ON T.car_code = B.car_code
        -- LEFT JOIN bas_shipping_company C ON T.shipping_company_id = C.company_id
        LEFT JOIN sys_user S ON T.delivery_staff = S.user_id
        LEFT JOIN (
        SELECT TC.order_load_id,
        COUNT(DISTINCT TC.customer_id) customer_count,
        COUNT(DISTINCT TC.bill_id) bill_count,
        SUM(TC.fcl_qty) fcl_qty,
        SUM(TC.lcl_qty) lcl_qty,
        SUM(TC.gift_qty) gift_qty,
        SUM(TC.sum_weight) sum_weight,
        SUM(TC.sum_amount) sum_amount,
        TC.sku_type,
        TC.pickup_mode
        FROM (
        SELECT
        TA.order_load_id,
        TA.bill_id,
        TA.customer_id,
        TB.sku_type,
        SUM( TA.fcl_qty ) fcl_qty,
        SUM( TA.lcl_qty ) lcl_qty,
        TB.gift_qty,
        TB.sum_weight,
        TB.sum_amount,
        TB.pickup_mode
        FROM
        order_load_details TA
        LEFT JOIN distribution_count TB ON TA.bill_id = TB.distribution_count_id
        LEFT JOIN distribution_count_details TJMX ON TA.bill_id = TJMX.distribution_count_id
        WHERE
        TA.split_order_no = TB.split_order_no
        GROUP BY
        TA.order_load_id,
        TA.bill_id,
        TA.customer_id,
        TB.gift_qty,
        TB.sum_weight,
        TB.sum_amount,
        TB.sku_type,
        TB.pickup_mode
        ) TC
        GROUP BY TC.order_load_id,
        TC.sku_type,
        TC.pickup_mode
        ) F ON T.order_load_id = F.order_load_id
        WHERE T.distribution_state = #{distribution_state}
        --AND T.transport_type = #{transport_type}
        AND T.wh_id = #{wh_id}
        order by T.order_load_id
    </select>
    <select id="getIssueLoadingBill" resultType="map">
        SELECT T.distribution_state,
        T.print_flag,
        T.order_load_id,
        T.order_load_code,
        T.create_at,
        T.start_time,
        T.dock_no,
        T.load_reviewer,
        T.transport_type,
        T.car_code,
        T.driver,
        B.car_id,
        B.model,
        B.load_weight,
        B.load_qty,
        B.state,
        T.delivery_staff,
        T.shipping_company_id,
        C.company_id,
        C.company_code,
        C.company_name,
        C.liaison,
        C.liaison_phone,
        C.address,
        T.is_pack_review,
        F.customer_count,
        F.bill_count,
        F.fcl_qty,
        F.lcl_qty,
        (F.fcl_qty + F.lcl_qty) all_qty,
        F.gift_qty,
        F.sum_weight,
        F.sum_amount,
        F.sku_type,
        F.pickup_mode
        FROM order_load T
        LEFT JOIN bas_car B ON T.car_code = B.car_code
        LEFT JOIN bas_shipping_company C ON T.shipping_company_id = C.company_id
        LEFT JOIN (
        SELECT TC.order_load_id,
        COUNT(DISTINCT TC.customer_id) customer_count,
        COUNT(DISTINCT TC.bill_id) bill_count,
        SUM(TC.fcl_qty) fcl_qty,
        SUM(TC.lcl_qty) lcl_qty,
        SUM(TC.gift_qty) gift_qty,
        SUM(TC.sum_weight) sum_weight,
        SUM(TC.sum_amount) sum_amount,
        TC.sku_type,
        TC.pickup_mode
        FROM (
        SELECT TA.order_load_id,
        TA.bill_id,
        TA.customer_id,
        TB.sku_type,
        SUM(TA.fcl_qty) fcl_qty,
        SUM(TA.lcl_qty) lcl_qty,
        TB.gift_qty,
        TB.sum_weight,
        TB.sum_amount,
        TB.pickup_mode
        FROM order_load_details TA,
        distribution_count TB,
        distribution_count_details TJMX
        WHERE TA.bill_id = TB.distribution_count_id
        AND TA.split_order_no = TB.split_order_no
        GROUP BY TA.order_load_id,
        TA.bill_id,
        TA.customer_id,
        TB.gift_qty,
        TB.sum_weight,
        TB.sum_amount,
        TB.sku_type,
        TB.pickup_mode
        ) TC
        GROUP BY TC.order_load_id,
        TC.sku_type,
        TC.pickup_mode
        ) F ON T.order_load_id = F.order_load_id
        WHERE T.distribution_state IN (2, 3, 4)
        AND T.wh_id = #{wh_id}
        AND T.transport_type = #{transport_type}
        order by T.order_load_id
    </select>

    <!--已排车单据查询（明细）-->
    <select id="getIssueDistBillDetails" resultType="map">
        SELECT DISTINCT TA.split_order_no,
        TA.billing_time,
        TA.sku_type,
        TA.pickup_mode,
        TA.remark,
        TA.distribution_count_id,
        TA.is_reload,
        TA.sum_amount,
        TA.sum_weight,
        TA.sum_volume,
        TA.cold_drugs_qty,
        TA.expensive_drugs_qty,
        TA.import_drugs_qty,
        TA.psychotropic_drugs_qty,
        TA.special_drugs_qty,
        TA.other_drugs_qty,
        TA.gift_qty,
        TA.distribution_type,
        TA.sale_type,
        TA.settlement_type,
        TA.salesman,
        TA.drawer,
        TA.distribution_count_code,
        TB.customer_code,
        TB.customer_name,
        TC.order_load_id,
        TX.order_load_code,
        TC.load_sequence,
        TC.fcl_qty,
        TC.lcl_qty,
        (TC.fcl_qty + TC.lcl_qty)all_qty,
        TC.quality_qty,
        TC.invoice_no,
        TC.invoice_box_no,
        TC.tag_no,
        TC.cold_box_no,
        TC.is_review,
        TC.delivery_staff,
        TC.real_lcl_qty,
        TC.real_fcl_qty,
        (TC.real_lcl_qty + TC.real_fcl_qty) all_real_qty,
        TF.direction_id,
        TF.direction_name,
        TG.owner_code,
        TG.owner_name,
        TD.order_out_code,
        TD.status,
        (SELECT stage_code FROM bas_stage WHERE stage_id = TD.start_stage_id) start_stage,
        (SELECT stage_code FROM bas_stage WHERE stage_id = TD.end_stage_id) end_stage
        FROM distribution_count TA,
        bas_customer TB,
        order_load_details TC,
        order_out TD,
        distribution_count_details TE,
        bas_direction TF,
        bas_owner TG,
        order_load TX
        WHERE TA.customer_id = TB.customer_id
        AND TA.distribution_count_id = TC.bill_id
        AND TA.distribution_count_id = TD.order_out_id
        AND TC.fcl_qty + TC.lcl_qty > 0
        AND TF.direction_id = TB.direction_id
        AND TG.owner_id = TA.owner_id
        AND TC.order_load_id = TX.order_load_id
        AND TC.order_load_id = #{order_load_id}
        GROUP BY TA.split_order_no,
        TA.billing_time,
        TA.sku_type,
        TA.pickup_mode,
        TA.remark,
        TA.distribution_count_id,
        TA.is_reload,
        TA.lcl_qty,
        TA.sum_amount,
        TA.sum_weight,
        TA.sum_volume,
        TA.cold_drugs_qty,
        TA.expensive_drugs_qty,
        TA.import_drugs_qty,
        TA.psychotropic_drugs_qty,
        TA.special_drugs_qty,
        TA.other_drugs_qty,
        TA.gift_qty,
        TA.distribution_type,
        TA.sale_type,
        TA.settlement_type,
        TA.salesman,
        TA.drawer,
        TA.distribution_count_code,
        TB.customer_code,
        TB.customer_name,
        TC.order_load_id,
        TX.order_load_code,
        TC.load_sequence,
        TC.fcl_qty,
        TC.lcl_qty,
        TC.quality_qty,
        TC.invoice_no,
        TC.invoice_box_no,
        TC.tag_no,
        TC.cold_box_no,
        TC.is_review,
        TC.delivery_staff,
        TC.real_lcl_qty,
        TC.real_fcl_qty,
        TF.direction_id,
        TF.direction_name,
        TG.owner_code,
        TG.owner_name,
        TD.order_out_code,
        TD.status,
        TD.start_stage_id,
        TD.end_stage_id
        ORDER BY TA.distribution_count_id
    </select>
    <!--装车单查询-->
    <select id="queryLoadingBill" resultType="map">
        SELECT
        T.print_flag,
        T.order_load_id,
        T.order_load_code,
        T.create_at,
        T.start_time,
        T.load_reviewer,
        T.car_code,
        T.out_mileage,
        T.back_mileage,
        (SELECT user_code FROM sys_user WHERE user_name = T.driver AND ROWNUM = 1) driver_code,
        T.driver driver_name,
        B.car_id,
        B.model,
        B.car_type,
        B.load_weight,
        B.load_qty,
        B.state,
        T.delivery_staff,
        ( SELECT z.user_name FROM sys_user z WHERE z.user_id = T.delivery_staff ) delivery_staff_name,
        T.shipping_company_id,
        T.transport_type,
        C.company_code,
        C.company_name,
        C.liaison,
        C.liaison_phone,
        C.address,
        F.customer_count,
        F.bill_count,
        (select sum(fcl_qty) from order_load_details where order_load_id = T.order_load_id)fcl_qty,
        (select sum(lcl_qty) from order_load_details where order_load_id = T.order_load_id)lcl_qty,
        (select sum(fcl_qty+lcl_qty) from order_load_details where order_load_id = T.order_load_id)all_qty,
        F.gift_qty,
        F.sum_weight,
        F.sum_amount,
        F.sum_volume,
        F.sku_type,
        F.pickup_mode
        FROM
        order_load T
        LEFT JOIN bas_car B ON T.car_code = B.car_code
        LEFT JOIN bas_shipping_company C ON T.shipping_company_id = C.company_id
        LEFT JOIN (
        SELECT
        TC.order_load_id,
        COUNT( DISTINCT TC.customer_id ) customer_count,
        COUNT( DISTINCT TC.bill_id ) bill_count,
        SUM( TC.fcl_qty ) fcl_qty,
        SUM( TC.lcl_qty ) lcl_qty,
        SUM( TC.gift_qty ) gift_qty,
        SUM( TC.sum_weight ) sum_weight,
        SUM( TC.sum_amount ) sum_amount,
        SUM( TC.sum_volume ) sum_volume,
        TC.sku_type,
        TC.pickup_mode
        FROM
        (
        SELECT
        TA.order_load_id,
        TA.bill_id,
        TA.customer_id,
        TB.sku_type,
        SUM( TA.fcl_qty ) fcl_qty,
        SUM( TA.lcl_qty ) lcl_qty,
        TB.gift_qty,
        TB.sum_weight,
        TB.sum_amount,
        TB.sum_volume,
        TB.pickup_mode
        FROM
        order_load_details TA
        LEFT JOIN distribution_count TB ON TA.bill_id = TB.distribution_count_id
        LEFT JOIN distribution_count_details TJMX ON TA.bill_id = TJMX.distribution_count_id
        WHERE
        TA.split_order_no = TB.split_order_no
        GROUP BY
        TA.order_load_id,
        TA.bill_id,
        TA.customer_id,
        TB.gift_qty,
        TB.sum_weight,
        TB.sum_amount,
        TB.sum_volume,
        TB.sku_type,
        TB.pickup_mode
        ) TC
        GROUP BY
        TC.order_load_id,
        TC.sku_type,
        TC.pickup_mode
        ) F ON T.order_load_id = F.order_load_id
        WHERE
        T.order_load_id = #{ order_load_id}
    </select>

    <!--开票单明细查询(上)-->
    <select id="getOrderDetailsA" resultType="map">
        SELECT T.order_out_id,
        T.order_out_code,
        Z.customer_code,
        Z.customer_name,
        T.dates,
        T.pickup_type,
        T.status
        FROM order_out T
        LEFT JOIN bas_customer Z ON T.customer_id = Z.customer_id
        WHERE T.order_out_id = #{distribution_count_id}
    </select>

    <!--开票单明细查询(下)-->
    <select id="getOrderDetailsB" resultType="map">
        SELECT
        T.*,
        MOD( T.QTY, PACKAGE_MEAS ) unpacked_qty,
        ( ( T.QTY - MOD( T.QTY, PACKAGE_MEAS ) ) / PACKAGE_MEAS ) packed_qty
        FROM
        (
        SELECT
        t_mx.order_out_id,
        t_mx.line_no,
        t_mx.quality,
        t_mx.package_id,
        t_mx.lot01,
        t_mx.qty,
        ( SELECT PACKAGE_UNIT FROM BAS_PACKAGE_ITEMS WHERE PACKAGE_LEVEL = 3 AND PACKAGE_ID = t_mx.PACKAGE_ID ) PACKAGE_UNIT,
        ( SELECT PACKAGE_MEAS FROM BAS_PACKAGE_ITEMS WHERE PACKAGE_LEVEL = 3 AND PACKAGE_ID = t_mx.PACKAGE_ID ) PACKAGE_MEAS,
        t_sp.item_code,
        t_sp.item_name,
        t_sp.remark,
        t_sp.item_specification,
        CASE

        WHEN t_hz.status > t_mx.status THEN
        t_hz.status ELSE t_mx.status
        END status
        FROM
        order_out_details t_mx
        LEFT JOIN order_out t_hz ON t_mx.order_out_id = t_hz.order_out_id
        LEFT JOIN bas_item t_sp ON t_mx.item_id = t_sp.item_id
        WHERE
        t_mx.order_out_id = #{ distribution_count_id }
        AND t_hz.wh_id = #{ wh_id }
        ORDER BY
        t_mx.line_no
        ) T
    </select>

    <!--开票单明细查询-装车单信息-->
    <select id="getOrderLoadingBill" resultType="map">
        SELECT
        t.order_load_id,
        th.order_load_code,
        t.bill_id,
        tt.order_out_code,
        t.fcl_qty,
        t.lcl_qty,
        ( t.fcl_qty + t.lcl_qty ) all_qty,
        td.scatter_mark,
        td.pack_no,
        ti.item_code,
        ti.item_name,
        td.lot_id,
        tx.lot01
        FROM
        order_load_details t
        LEFT JOIN order_load th ON t.order_load_id = th.order_load_id
        LEFT JOIN distribution_count_details td ON t.bill_id = td.distribution_count_id
        LEFT JOIN bas_item ti ON td.item_id = ti.item_id
        LEFT JOIN order_out tt ON t.bill_id = tt.order_out_id
        LEFT JOIN bas_lot_att tx ON td.lot_id = tx.lot_id
        WHERE t.bill_id = td.distribution_count_id
        AND t.bill_id = #{ distribution_count_id }
        <if test="order_load_id != null AND order_load_id != '' AND !order_load_id.equals('N/A')">
            AND t.order_load_id = #{ order_load_id }
        </if>
        ORDER BY
        th.order_load_code,
        t.bill_id
    </select>

    <!--周转箱查询-->
    <select id="queryTurnBox" resultType="map">
        SELECT
        A.direction_name,
        A.customer_id,
        A.customer_code,
        A.customer_name,
        A.start_stage,
        A.end_stage,
        A.sku_type,
        A.pickup_mode,
        A.remark,
        A.is_reload,
        A.settlement_type,
        A.salesman,
        A.drawer,
        A.owner_code,
        A.owner_name,
        A.real_qty,
        A.paper_box_qty,
        A.back_turn_box_qty,
        A.back_paper_box_qty,
        A.turn_box_qty,
        SUM( A.quality_qty ) quality_qty,
        SUM( A.fcl_qty ) fcl_qty,
        SUM( A.lcl_qty ) lcl_qty,
        SUM( A.all_qty ) all_qty,
        SUM( A.return_qty ) return_qty,
        SUM( A.sum_amount ) sum_amount,
        SUM( A.sum_volume ) sum_volume,
        SUM( A.sum_weight ) sum_weight,
        SUM( A.real_qty ) real_qty,
        SUM( A.paper_box_qty ) paper_box_qty,
        SUM( A.back_turn_box_qty ) back_turn_box_qty,
        SUM( A.back_paper_box_qty ) back_paper_box_qty
        FROM
        (
        SELECT
        TD.direction_name,
        TB.customer_id,
        TB.customer_code,
        TB.customer_name,
        ( SELECT stage_name FROM bas_stage WHERE stage_id = TC.start_stage_id ) start_stage,
        ( SELECT stage_name FROM bas_stage WHERE stage_id = TC.end_stage_id ) end_stage,
        TA.billing_time,
        TA.sku_type,
        TA.pickup_mode,
        TA.remark,
        TA.is_reload,
        TA.quality_qty,
        TA.fcl_qty,
        TA.lcl_qty,
        ( TA.fcl_qty + TA.lcl_qty ) all_qty,
        TA.return_qty,
        TA.sum_amount,
        TA.sum_volume,
        TA.sum_weight,
        TA.settlement_type,
        TA.salesman,
        TA.drawer,
        TE.owner_code,
        TE.owner_name,
        NVL( TF.turn_box_qty, 0 ) turn_box_qty,
        NVL( TF.real_qty, 0 ) real_qty,
        NVL( TF.paper_box_qty, 0 ) paper_box_qty,
        NVL( TF.back_turn_box_qty, 0 ) back_turn_box_qty,
        NVL( TF.back_paper_box_qty, 0 ) back_paper_box_qty
        FROM
        distribution_count TA
        LEFT JOIN bas_customer TB ON TA.customer_id = TB.customer_id
        LEFT JOIN order_out TC ON TC.order_out_id = TA.distribution_count_id
        LEFT JOIN bas_direction TD ON TB.direction_id = TD.direction_id
        LEFT JOIN bas_owner TE ON TA.owner_id = TE.owner_id
        LEFT JOIN CUSTOMER_BOX_COUNT TF ON TA.CUSTOMER_ID = TF.CUSTOMER_ID
        WHERE
        TA.wh_id = TC.wh_id
        AND EXISTS ( SELECT 1 FROM order_out_details A WHERE A.order_out_id = TC.order_out_id AND A.qty > 0 )
        AND EXISTS ( SELECT 1 FROM order_load_details TZ WHERE TA.distribution_count_id = TZ.bill_id AND TZ.order_load_id = #{ order_load_id } )
        AND TA.wh_id = #{ wh_id }
        ) A
        GROUP BY
        A.direction_name,
        A.customer_id,
        A.customer_code,
        A.customer_name,
        A.start_stage,
        A.end_stage,
        A.sku_type,
        A.pickup_mode,
        A.remark,
        A.is_reload,
        A.settlement_type,
        A.salesman,
        A.drawer,
        A.owner_code,
        A.owner_name,
        A.real_qty,
        A.paper_box_qty,
        A.back_turn_box_qty,
        A.back_paper_box_qty,
        A.turn_box_qty
        ORDER BY A.customer_code
    </select>

</mapper>
