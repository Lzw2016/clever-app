<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderInPut">

    <select id="queryOrder1">
        select oi.order_in_id,
               oi.order_in_code,
               oi.supplier_id,
               bc.customer_code,
               bc.customer_name as supplier_name,
               oi.dates,
               oi.asn_staff,
               (select user_name from sys_user where user_id = oi.ORDER_STAFF_ID) as order_staff,
               oi.business_code,
               oi.order_type,
               oi.order_biz_type,
               bo.owner_code,
               bo.owner_name,
               oi.is_complete
        from order_in oi
             inner join bas_customer bc on oi.supplier_id = bc.customer_id
             inner join bas_owner bo on bo.owner_id = oi.owner_id
             inner join asn_in ai on ai.asn_in_id = oi.asn_in_id
        where exists(
                      select 1 from cmd_in
                      where order_id = oi.order_in_id
                        and cmd_state >= 20
                        <![CDATA[and cmd_state < 60 ]]>
                  )
        and oi.wh_id = #{wh_id}
        <if test="#obj.notEmpty(ownerArr)">
            and oi.owner_id in
            <foreach collection="ownerArr" separator="," item="item" index="index" open="(" close=")">
                #{item}
            </foreach>
        </if>
        --@ and ai.business_code like '%' ||  #{business_code} || '%'
        order by oi.order_in_id desc
    </select>

    <select id="queryOrderDetails">
        <![CDATA[
        select d.item_id,
               d.item_code,
               d.item_name,
               d.logogram,
               d.manufacturer,
               d.origin,
               d.is_double_quality,
               f.package_unit,
               floor(nvl(g.package_meas, 0) / nvl(f.package_meas, 1))                 AS medium,
               c.lot_id,
               c.qty,
               c.quality_flg,
               decode(c.is_unpack, 1, 0, floor(nvl(c.qty, 0) / nvl(g.package_meas, 1))) AS order_qty_piece,
               decode(c.is_unpack, 1, c.qty, 0) AS order_qty_less,
               -- floor(nvl(c.qty, 0) / nvl(g.package_meas, 1))                          AS order_qty_piece,
               --mod((c.qty), nvl(g.package_meas, 1))                                   AS order_qty_less,
               c.order_id                                                             as order_in_id,
               c.order_line_no,
               c.package_id,
               c.lpn,
               c.price,
               c.asn_in_id,
               c.asn_line_no,
               c.business_code,
               c.cmd_line_no,
               c.barcode,
               c.loc_id,
               i.loc_code,
               c.loc_id_real,
               i1.loc_code                                                            as loc_code_real,
               h.area_id,
               h.area_code,
               h.area_name,
               j.lot01,
               j.lot02,
               j.lot03,
               -- (select user_name from sys_user where user_id = a.ORDER_STAFF_ID) as order_staff,
               ''                                                                     as order_staff,
               (select user_name from sys_user where user_id = c.QUALITY_EMPLOYEE_ID) as quality_employee,
               c.splity_employee_id,
               (select user_name from sys_user where user_id = c.splity_employee_id) as splity_employee,
               c.update_employee,
               c.order_type,
               c.order_biz_type
        from cmd_in c
             inner join bas_item d on d.item_id = c.item_id
             inner join bas_lot_att e on e.lot_id = c.lot_id
             inner join bas_package_items f
                        on f.PACKAGE_ID = c.PACKAGE_ID and f.item_id = c.item_id and f.PACKAGE_LEVEL = '1'
             inner join bas_package_items g
                        on g.PACKAGE_ID = c.PACKAGE_ID and g.item_id = c.item_id and g.PACKAGE_LEVEL = '3'
             inner join bas_area h on h.area_id = c.area_id
             inner join bas_location i on i.loc_id = c.loc_id
             inner join bas_location i1 on i1.loc_id = c.loc_id_real
             inner join bas_lot_att j on c.lot_id = j.lot_id
        where c.cmd_state >= 20 and c.cmd_state < 60  and c.quality_flg != 88  and c.quality_flg != 1]]>
          --@ and c.order_type = #{order_type}
          <if test="!#obj.isEmpty(tab)">
            and c.order_id = #{order_in_id}
          </if>
          <!--&#45;&#45;@ and c.order_id = #{order_in_id}-->
          --% and c.business_code like #{business_code}
          --% and c.barcode like #{container_code}
          --% and ( d.item_code like #{item_code} or d.logogram like #{item_code})
          --% and h.area_code like #{area_code}
          and c.wh_id = #{wh_id}
            <if test="#obj.notEmpty(ownerArr)">
                and c.owner_id in
                <foreach collection="ownerArr" separator="," item="item" index="index" open="(" close=")">
                    #{item}
                </foreach>
            </if>
        order by c.order_id desc, c.order_line_no asc
    </select>

    <select id="pdaQueryOrderDetails">
        <![CDATA[
        select d.item_id,
               d.item_code,
               d.item_name,
               d.logogram,
               d.manufacturer,
               d.origin,
               d.ssxkcyr_man,
               d.ssxkcyr,
               d.is_double_quality,
               f.package_unit,
               g.package_meas,
               floor(nvl(g.package_meas, 0) / nvl(f.package_meas, 1))                 AS medium,
               c.lot_id,
               c.qty,
               c.quality_flg,

               decode(c.is_unpack, 1, 0, floor(nvl(c.qty, 0) / nvl(g.package_meas, 1))) AS order_qty_piece,
               decode(c.is_unpack, 1, c.qty, 0) AS order_qty_less,

               -- floor(nvl(c.qty, 0) / nvl(g.package_meas, 1))                          AS order_qty_piece,
               -- mod((c.qty), nvl(g.package_meas, 1))                                   AS order_qty_less,
               c.order_id                                                             as order_in_id,
               c.order_line_no,
               c.package_id,
               c.lpn,
               c.price,
               c.asn_in_id,
               c.asn_line_no,
               c.business_code,
               c.business_code_line,
               c.cmd_line_no,
               c.loc_id,
               i.loc_code,
               c.loc_id_real,
               i1.loc_code                                                            as loc_code_real,
               h.area_id,
               h.area_code,
               h.area_name,
               j.lot01,
               j.lot02,
               j.lot03,
               -- (select user_name from sys_user where user_id = a.ORDER_STAFF_ID) as order_staff,
               ''                                                                     as order_staff,
               (select user_name from sys_user where user_id = c.QUALITY_EMPLOYEE_ID) as quality_employee,
               c.splity_employee_id,
               c.update_employee,
               c.order_type,
               c.order_biz_type,
               (select DICT_TEXT from BAS_DICT_ITEMS where dict_code = 'ORDER_TYPE' and dict_value = c.order_type) as order_biz_name,
               c.barcode,
               f.BARCODE item_barcode1,
               g.BARCODE item_barcode3,
               rp.name rule_putaway_name
        from cmd_in c
             inner join bas_item d on d.item_id = c.item_id
             inner join bas_lot_att e on e.lot_id = c.lot_id
             inner join bas_package_items f
                        on f.PACKAGE_ID = c.PACKAGE_ID and f.item_id = c.item_id and f.PACKAGE_LEVEL = 1
             inner join bas_package_items g
                        on g.PACKAGE_ID = c.PACKAGE_ID and g.item_id = c.item_id and g.PACKAGE_LEVEL = 3
             inner join bas_area h on h.area_id = c.area_id
             inner join bas_location i on i.loc_id = c.loc_id
             inner join bas_location i1 on i1.loc_id = c.loc_id_real
             inner join bas_lot_att j on c.lot_id = j.lot_id
             left join rule_apply e on e.match_id = c.item_id and e.rule_type = 1
             left join rule_putaway rp on rp.rule_putaway_id = e.rule_id
        where c.cmd_state >= 20 and c.cmd_state < 60 and c.quality_flg != 88  and c.quality_flg != 1 ]]>
          --@ and c.business_code = #{business_code}
          --@ and c.order_id = #{order_in_id}
          --@ and c.order_type = #{order_type}
          --@ and c.order_line_no = #{order_line_no}
          --@ and c.barcode = #{barcode}
          --@ and d.approval_no = #{approval_no}
          --@ and ( d.item_code like '%' || #{item_code} || '%' or d.approval_no like '%' || #{item_code} || '%' or d.logogram like '%' || #{item_code} || '%' OR f.BARCODE = #{item_code} OR g.BARCODE = #{item_code})
        order by i1.loc_code, c.order_id desc, c.order_line_no asc

    </select>

    <select id="queryPutDetails">
        select
        oi.supplier_id,
        oi.order_in_code,
        ci.order_type,
        ci.order_biz_type,
        ci.splity_employee_id,
        ci.update_employee,
        ci.is_running,
        ci.cmd_state,
        ci.loc_id_real,
        ci.loc_id,
        ci.order_id,
        ci.owner_id,
        ci.item_id,
        ci.package_id,
        ci.lot_id,
        ci.quality,
        ci.lpn,
        ci.cmd_line_no,
        ci.barcode,
        oi.order_in_id,
        ci.asn_in_id,
        oi.is_complete,
        ci.qty,
        ai.multiple_receive,
        ci.business_code
        from cmd_in ci
        left join asn_in ai on ai.asn_in_id = ci.asn_in_id
        left join order_in oi on ci.order_id = oi.order_in_id
        where ci.wh_id = #{whId} and
        <foreach collection="list" separator=" or " item="item" index="index" open="(" close=")">
            (ci.order_id = #{item.order_in_id} and ci.cmd_line_no = #{item.cmd_line_no})
        </foreach>
    </select>

    <select id="queryPutLocationList">
        select bl.loc_id , bl.area_id , bl.is_enable, bl.is_lock, bl.loc_code, ba.area_name from bas_location bl
        inner join bas_area ba on bl.AREA_ID = ba.AREA_ID
        where bl.wh_id = #{whId} and bl.loc_id in
        <foreach collection="list" separator=" , " item="item" index="index" open="(" close=")">
            #{item.loc_id_real}
        </foreach>
    </select>


</mapper>
